// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticaLibroDiarioTemplate.Models.Contexts;

namespace PracticaLibroDiarioTemplate.Migrations
{
    [DbContext(typeof(LibroDiarioContext))]
    partial class LibroDiarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PracticaLibroDiarioTemplate.Models.BusinessModel.AsientoLibroDiario", b =>
                {
                    b.Property<Guid>("AsientoLibroDiarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Debe");

                    b.Property<string>("Detalle");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<Guid>("FolioId");

                    b.Property<decimal>("Haber");

                    b.HasKey("AsientoLibroDiarioId");

                    b.HasIndex("FolioId");

                    b.ToTable("LibroDiario");
                });

            modelBuilder.Entity("PracticaLibroDiarioTemplate.Models.BusinessModel.AsientoLibroMayor", b =>
                {
                    b.Property<Guid>("AsientoLibroMayorId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Debe");

                    b.Property<string>("Detalle");

                    b.Property<string>("Folio");

                    b.Property<decimal>("Haber");

                    b.Property<string>("NombreCuenta");

                    b.HasKey("AsientoLibroMayorId");

                    b.ToTable("LibroMayor");
                });

            modelBuilder.Entity("PracticaLibroDiarioTemplate.Models.BusinessModel.AsientoLibroDiario", b =>
                {
                    b.HasOne("PracticaLibroDiarioTemplate.Models.BusinessModel.AsientoLibroMayor", "Folio")
                        .WithMany("AsientoLibroDiarios")
                        .HasForeignKey("FolioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
